Program state:
SymTable:

Execution stack:
(v = 6, (while((v-4)) do {(print(v), v = (v-1))}, print(v)))

Output:

File table:
{}
Heap:
{}
(v = 6, (while((v-4)) do {(print(v), v = (v-1))}, print(v)))
--------------------------------------------------


Program state:
SymTable:

Execution stack:
(while((v-4)) do {(print(v), v = (v-1))}, print(v))
v = 6

Output:

File table:
{}
Heap:
{}
(v = 6, (while((v-4)) do {(print(v), v = (v-1))}, print(v)))
--------------------------------------------------


Program state:
SymTable:
v=6

Execution stack:
(while((v-4)) do {(print(v), v = (v-1))}, print(v))

Output:

File table:
{}
Heap:
{}
(v = 6, (while((v-4)) do {(print(v), v = (v-1))}, print(v)))
--------------------------------------------------


Program state:
SymTable:
v=6

Execution stack:
print(v)
while((v-4)) do {(print(v), v = (v-1))}

Output:

File table:
{}
Heap:
{}
(v = 6, (while((v-4)) do {(print(v), v = (v-1))}, print(v)))
--------------------------------------------------


Program state:
SymTable:
v=6

Execution stack:
print(v)
while((v-4)) do {(print(v), v = (v-1))}
(print(v), v = (v-1))

Output:

File table:
{}
Heap:
{}
(v = 6, (while((v-4)) do {(print(v), v = (v-1))}, print(v)))
--------------------------------------------------


Program state:
SymTable:
v=6

Execution stack:
print(v)
while((v-4)) do {(print(v), v = (v-1))}
v = (v-1)
print(v)

Output:

File table:
{}
Heap:
{}
(v = 6, (while((v-4)) do {(print(v), v = (v-1))}, print(v)))
--------------------------------------------------


Program state:
SymTable:
v=6

Execution stack:
print(v)
while((v-4)) do {(print(v), v = (v-1))}
v = (v-1)

Output:
6

File table:
{}
Heap:
{}
(v = 6, (while((v-4)) do {(print(v), v = (v-1))}, print(v)))
--------------------------------------------------


Program state:
SymTable:
v=5

Execution stack:
print(v)
while((v-4)) do {(print(v), v = (v-1))}

Output:
6

File table:
{}
Heap:
{}
(v = 6, (while((v-4)) do {(print(v), v = (v-1))}, print(v)))
--------------------------------------------------


Program state:
SymTable:
v=5

Execution stack:
print(v)
while((v-4)) do {(print(v), v = (v-1))}
(print(v), v = (v-1))

Output:
6

File table:
{}
Heap:
{}
(v = 6, (while((v-4)) do {(print(v), v = (v-1))}, print(v)))
--------------------------------------------------


Program state:
SymTable:
v=5

Execution stack:
print(v)
while((v-4)) do {(print(v), v = (v-1))}
v = (v-1)
print(v)

Output:
6

File table:
{}
Heap:
{}
(v = 6, (while((v-4)) do {(print(v), v = (v-1))}, print(v)))
--------------------------------------------------


Program state:
SymTable:
v=5

Execution stack:
print(v)
while((v-4)) do {(print(v), v = (v-1))}
v = (v-1)

Output:
5
6

File table:
{}
Heap:
{}
(v = 6, (while((v-4)) do {(print(v), v = (v-1))}, print(v)))
--------------------------------------------------


Program state:
SymTable:
v=4

Execution stack:
print(v)
while((v-4)) do {(print(v), v = (v-1))}

Output:
5
6

File table:
{}
Heap:
{}
(v = 6, (while((v-4)) do {(print(v), v = (v-1))}, print(v)))
--------------------------------------------------


Program state:
SymTable:
v=4

Execution stack:
print(v)

Output:
5
6

File table:
{}
Heap:
{}
(v = 6, (while((v-4)) do {(print(v), v = (v-1))}, print(v)))
--------------------------------------------------


Program state:
SymTable:
v=4

Execution stack:

Output:
4
5
6

File table:
{}
Heap:
{}
(v = 6, (while((v-4)) do {(print(v), v = (v-1))}, print(v)))
--------------------------------------------------


