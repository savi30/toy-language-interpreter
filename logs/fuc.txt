Program state:
SymTable:

Execution stack:
(((v = 10, new(v ,20)), (new(a ,22), WriteHeap(a, 30))), (print(a), print(ReadHeap(a))))

Output:

File table:
{}
Heap:
{}
(((v = 10, new(v ,20)), (new(a ,22), WriteHeap(a, 30))), (print(a), print(ReadHeap(a))))
--------------------------------------------------


Program state:
SymTable:

Execution stack:
(print(a), print(ReadHeap(a)))
((v = 10, new(v ,20)), (new(a ,22), WriteHeap(a, 30)))

Output:

File table:
{}
Heap:
{}
(((v = 10, new(v ,20)), (new(a ,22), WriteHeap(a, 30))), (print(a), print(ReadHeap(a))))
--------------------------------------------------


Program state:
SymTable:

Execution stack:
(print(a), print(ReadHeap(a)))
(new(a ,22), WriteHeap(a, 30))
(v = 10, new(v ,20))

Output:

File table:
{}
Heap:
{}
(((v = 10, new(v ,20)), (new(a ,22), WriteHeap(a, 30))), (print(a), print(ReadHeap(a))))
--------------------------------------------------


Program state:
SymTable:

Execution stack:
(print(a), print(ReadHeap(a)))
(new(a ,22), WriteHeap(a, 30))
new(v ,20)
v = 10

Output:

File table:
{}
Heap:
{}
(((v = 10, new(v ,20)), (new(a ,22), WriteHeap(a, 30))), (print(a), print(ReadHeap(a))))
--------------------------------------------------


Program state:
SymTable:
v=10

Execution stack:
(print(a), print(ReadHeap(a)))
(new(a ,22), WriteHeap(a, 30))
new(v ,20)

Output:

File table:
{}
Heap:
{}
(((v = 10, new(v ,20)), (new(a ,22), WriteHeap(a, 30))), (print(a), print(ReadHeap(a))))
--------------------------------------------------


Program state:
SymTable:
v=1

Execution stack:
(print(a), print(ReadHeap(a)))
(new(a ,22), WriteHeap(a, 30))

Output:

File table:
{}
Heap:
{1=20}
(((v = 10, new(v ,20)), (new(a ,22), WriteHeap(a, 30))), (print(a), print(ReadHeap(a))))
--------------------------------------------------


Program state:
SymTable:
v=1

Execution stack:
(print(a), print(ReadHeap(a)))
WriteHeap(a, 30)
new(a ,22)

Output:

File table:
{}
Heap:
{1=20}
(((v = 10, new(v ,20)), (new(a ,22), WriteHeap(a, 30))), (print(a), print(ReadHeap(a))))
--------------------------------------------------


Program state:
SymTable:
a=2
v=1

Execution stack:
(print(a), print(ReadHeap(a)))
WriteHeap(a, 30)

Output:

File table:
{}
Heap:
{1=20, 2=22}
(((v = 10, new(v ,20)), (new(a ,22), WriteHeap(a, 30))), (print(a), print(ReadHeap(a))))
--------------------------------------------------


Program state:
SymTable:
a=2
v=1

Execution stack:
(print(a), print(ReadHeap(a)))

Output:

File table:
{}
Heap:
{1=20, 2=30}
(((v = 10, new(v ,20)), (new(a ,22), WriteHeap(a, 30))), (print(a), print(ReadHeap(a))))
--------------------------------------------------


Program state:
SymTable:
a=2
v=1

Execution stack:
print(ReadHeap(a))
print(a)

Output:

File table:
{}
Heap:
{1=20, 2=30}
(((v = 10, new(v ,20)), (new(a ,22), WriteHeap(a, 30))), (print(a), print(ReadHeap(a))))
--------------------------------------------------


Program state:
SymTable:
a=2
v=1

Execution stack:
print(ReadHeap(a))

Output:
2

File table:
{}
Heap:
{1=20, 2=30}
(((v = 10, new(v ,20)), (new(a ,22), WriteHeap(a, 30))), (print(a), print(ReadHeap(a))))
--------------------------------------------------


Program state:
SymTable:
a=2
v=1

Execution stack:

Output:
30
2

File table:
{}
Heap:
{1=20, 2=30}
(((v = 10, new(v ,20)), (new(a ,22), WriteHeap(a, 30))), (print(a), print(ReadHeap(a))))
--------------------------------------------------


